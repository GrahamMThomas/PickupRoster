model Meetup {
    id          String    @id @default(cuid())
    title       String
    description String?
    startDate   DateTime? // Nullable so it can be TBD
    endDate     DateTime?
    splashImage String?
    locationId  String?

    // References
    orgId    String
    rosterId String @unique

    // Timestamps
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relationships
    org      Organization @relation(fields: [orgId], references: [id])
    roster   Roster       @relation(fields: [rosterId], references: [id])
    location Location?    @relation(fields: [locationId], references: [placeId])
}

// ROSTER

enum RosterStrategy {
    OPEN // Anyone can join. Simple slot number.
    POSITIONS
}

model Roster {
    id           String         @id @default(cuid())
    strategyType RosterStrategy
    strategy     Json

    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt
    Meetup         Meetup?
    MeetupAttendee MeetupAttendee[]
}

model MeetupAttendee {
    id       String @id @default(cuid())
    userId   String
    rosterId String
    slotId   String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user   User   @relation(fields: [userId], references: [id])
    roster Roster @relation(fields: [rosterId], references: [id])
}

// Location
model Location {
    placeId String @id
    name    String
    address String

    Meetup Meetup[]
}
